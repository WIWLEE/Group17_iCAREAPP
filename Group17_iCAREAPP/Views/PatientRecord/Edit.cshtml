
@model Group17_iCAREAPP.Models.PatientRecord

@{
    ViewBag.Title = "Edit Patient Record";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Edit Patient Record</h3>
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.ID)
                   

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.name, "Patient Name", new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.name, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.dateOfBirth, "Date of Birth", new { @class = "form-label" })
                        @Html.TextBoxFor(m => m.dateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(m => m.dateOfBirth, "", new { @class = "text-danger" })
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.height, "Height (cm)", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.height, new { @class = "form-control", type = "number", step = "0.1" })
                            @Html.ValidationMessageFor(m => m.height, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.weight, "Weight (kg)", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.weight, new { @class = "form-control", type = "number", step = "0.1" })
                            @Html.ValidationMessageFor(m => m.weight, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.bloodGroup, "Blood Group", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.bloodGroup,
                            new SelectList(new[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }),
                            "Select Blood Group", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.bloodGroup, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.address, "Address", new { @class = "form-label" })
                        @Html.TextAreaFor(m => m.address, new { @class = "form-control", rows = "3" })
                        @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.treatmentArea, "Treatment Area", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.treatmentArea, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.treatmentArea, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.bedID, "Bed ID", new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.bedID, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.bedID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(m => m.geographicalUnit, "Geographical Unit", new { @class = "form-label" })
                        @Html.DropDownListFor(m => m.geographicalUnit, (SelectList)ViewBag.geographicalUnit,
                            "Select Geographical Unit", new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(m => m.geographicalUnit, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group d-flex justify-content-between">
                        <a href="@Url.Action("Index","MyBoard")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Save Changes
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

