@model List<Group17_iCAREAPP.Models.PatientRecord>
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        .patient-records {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .patient-record {
            border: 1px solid #ccc;
            padding: 15px;
            border-radius: 5px;
            background-color: #f9f9f9;
        }

        .assign-all-btn, .back-btn {
            display: inline-block;
            padding: 10px 15px;
            font-size: 16px;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        .assign-all-btn {
            background-color: #28a745; 
            margin-right: 10px;
        }


        .back-btn {
            background-color: #007bff;
        }

        .assign-all-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 300px;
            background-color: white;
            border-radius: 8px;
            padding: 1rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            z-index: 1000;
        }

        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        .close-button {
            float: right;
            cursor: pointer;
            font-size: 1.2rem;
            color: #333;
        }
    </style>
</head>

<a class="assign-all-btn" id="assignAll" onclick = "openAssignAllModal()" disabled>Assign All</a>
<a class="back-btn" id="backButton" href="@Url.Action("Index")">Back</a>

<div class="patient-records">
    @foreach (var patient in Model)
    {
        <div class="patient-record">
            <p>Name: @patient.name</p>
            <p>Treatment Area: @patient.treatmentArea</p>

            <span class="assignability-result" id="result-@patient.ID"></span>
        </div>
    }
</div>

<div class="modal-overlay" id="modalOverlay" onclick="closeModal()"></div>
<div class="modal" id="detailModal">
    <span class="close-button" onclick="closeModal()">×</span>
    <div id="modalContent">
        <!-- modal Content - can change-->
    </div>
</div>

<script>
    var successPatients = [];
    var roleName = "";
    var workerId = '@ViewBag.workerId';
    var roleName = '@ViewBag.roleName';

    $(document).ready(function () {
            @foreach (var patient in Model)
            {
                <text>
                    callCheckAssignability('@patient.ID');
                </text>
            }

    });

    function assignWholeSubmit()
    {
        var treatmentBase = "TREAT-" + new Date().getTime();
        const now = new Date();
        const thedate = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;
        const description = document.getElementById("descriptionInput").value;

        successPatients.forEach(patientId => {
            var treatmentId = treatmentBase + "+" + patientId;

            const requestData = {
                treatmentID: treatmentId,
                description: description,
                treatmentDate: thedate,
                patientID: patientId,
                workerID: workerId,
                roleName: roleName
            };
            console.log(requestData);

            fetch('@Url.Action("AssignPatient", "TreatmentRecords")', {

                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(requestData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {

                    if (data.success);

                    closeModal();
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        });


    }

    function openAssignAllModal() {
        document.getElementById("modalContent").innerHTML = `
        <h4>Patient Assign</h4>
        <label for="descriptionInput">Treatment Description:</label>
        <input type="text" id="descriptionInput" placeholder="Enter treatment description" oninput="toggleAssignButton()">
        <button id="confirmAssignButton" onclick="assignWholeSubmit()" disabled>Assign</button>
        <button onclick="closeAssignModal()">Close</button>
    `;
        document.getElementById("modalOverlay").style.display = "block";
        document.getElementById("detailModal").style.display = "block";

    }

    function toggleAssignButton() {
        const description = document.getElementById("descriptionInput").value;
        document.getElementById("confirmAssignButton").disabled = description.trim() === "";
    }

    function cloasAssignModal() {
        document.getElementById("modalOverlay").style.display = "none";
        document.getElementById("detailModal").style.display = "none";
    }

    function callCheckAssignability(patientId) {
            $.ajax({
                type: "POST",
                url: '/TreatmentRecords/CheckAssignability',
                data: JSON.stringify({ patientId: patientId }),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    var resultElement = $("#result-" + patientId);
                    if (response.success) {
                        resultElement.text(response.message).css("color", "green");
                        successPatients.push(patientId);
                        roleName = response.roleName;
                        $('#assignAll').prop('disabled', false);
                    } else {
                        resultElement.text(response.message).css("color", "red");
                    }
                },
                error: function () {
                    alert("An error occurred while checking assignability.");
                }
            });
        }
</script>