@model List<Group17_iCAREAPP.Models.PatientRecord>


@{
    var antiForgeryToken = @Html.AntiForgeryToken();
}

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
</head>

<div class="container-fluid py-4">
    @Html.AntiForgeryToken()
    <div class="assignment-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <!-- Can assign all patients that are available -->
                <button class="btn btn-success me-3" id="assignAll" onclick="openAssignAllModal()" disabled>
                    <i class="fas fa-users me-2"></i>Assign All
                </button>
                <!-- Can return to list of geo locations -->
                <a class="btn btn-outline-primary" id="backButton" href="@Url.Action("Index")">
                    <i class="fas fa-arrow-left me-2"></i>Back
                </a>
            </div>
            <div class="assignment-status">
                <span class="badge bg-info">
                    <i class="fas fa-clipboard-check me-1"></i>
                    <span id="assignableCount">0</span> Assignable Patients
                </span>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <!-- Creates card with all patients in that area -->
        @foreach (var patient in Model)
        {
            <div class="col-md-6 col-lg-4">
                <div class="patient-assignment-card">
                    <div class="patient-info">
                        <h4 class="patient-name">@patient.name</h4>
                        <p class="treatment-area">
                            <i class="fas fa-clinic-medical me-2"></i>@patient.treatmentArea
                        </p>
                    </div>
                    <!-- Makes it look like it's loading when check assignability status -->
                    <div class="assignment-status">
                        <span class="status-indicator" id="result-@patient.ID">
                            <i class="fas fa-spinner fa-spin me-2"></i>Checking assignability...
                        </span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal-overlay" id="modalOverlay"></div>
<div class="custom-modal" id="detailModal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Assign Patients</h5>
            <button type="button" class="btn-close" onclick="closeModal()">×</button>
        </div>
        <div class="modal-body" id="modalContent">
        </div>
    </div>
</div>

<script>
    console.log('View loaded');
    console.log('Role name: @ViewBag.roleName');
    console.log('Worker ID: @ViewBag.workerId');
</script>

<style>
    .assignment-header {
        background: white;
        padding: 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .patient-assignment-card {
        background: white;
        border-radius: 0.5rem;
        padding: 1.5rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        transition: transform 0.2s;
        height: 100%;
    }

    .patient-assignment-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .patient-name {
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #2c3e50;
    }

    .treatment-area {
        color: #6c757d;
        margin-bottom: 1rem;
    }

    .assignment-status {
        padding-top: 1rem;
        border-top: 1px solid #dee2e6;
    }

    .status-indicator {
        display: block;
        padding: 0.5rem;
        border-radius: 0.25rem;
        background: #f8f9fa;
        font-size: 0.9rem;
    }

    .status-indicator.success {
        background: #d4edda;
        color: #155724;
    }

    .status-indicator.error {
        background: #f8d7da;
        color: #721c24;
    }

    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.5);
        z-index: 1040;
        display: none;
    }

    .custom-modal {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        border-radius: 0.5rem;
        z-index: 1050;
        display: none;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .modal-header {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid #dee2e6;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-content {
        width: 100%;
    }

    #descriptionInput {
        width: 100%;
        padding: 0.75rem;
        margin: 1rem 0;
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        font-size: 1rem;
    }

    #descriptionInput:focus {
        outline: none;
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
    }

    #confirmAssignButton {
        width: 100%;
        padding: 0.75rem;
        background-color: #28a745;
        border: none;
        border-radius: 0.375rem;
        color: white;
        font-weight: 500;
        margin-bottom: 0.5rem;
        transition: background-color 0.2s;
    }

    #confirmAssignButton:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }

    #confirmAssignButton:not(:disabled):hover {
        background-color: #218838;
    }

    .btn-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        color: #6c757d;
        cursor: pointer;
        padding: 0;
        line-height: 1;
    }

    .btn-close:hover {
        color: #343a40;
    }

    .result-modal-content {
        padding: 2rem;
    }

    .result-modal-content i {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    .result-modal-content h4 {
        color: #2c3e50;
        margin-bottom: 1rem;
    }

    .result-modal-content p {
        color: #6c757d;
        margin-bottom: 1.5rem;
    }

    .result-modal-content .btn {
        padding: 0.75rem 1.5rem;
        font-weight: 500;
    }

    .custom-modal {
        animation: fadeIn 0.3s ease-out;
    }
</style>

<script>
    var successPatients = [];
    var roleName = '@ViewBag.roleName';
    var workerId = '@ViewBag.workerId';


    // To assign all patients in the area to the worker, first check each patient can be assigned or not.
    $(document).ready(function () {
        console.log('Initializing with role:', roleName, 'worker:', workerId);
        @foreach (var patient in Model)
        {
            <text>
            callCheckAssignability('@patient.ID');
            </text>
        }
    });

    function callCheckAssignability(patientId) {
        var token = $('[name=__RequestVerificationToken]').val();

        $.post({
            url: '@Url.Action("CheckAssignability", "TreatmentRecords")',
            data: {
                patientId: patientId,
                __RequestVerificationToken: token
            },
            traditional: true,
            success: function (response) {
                var resultElement = $(`#result-${patientId}`);

                if (response.success) {
                    resultElement
                        .removeClass('error')
                        .addClass('success')
                        .html(`<i class="fas fa-check-circle me-2"></i>${response.message}`);

                    // push the patient in the succesPatients array
                    if (!successPatients.includes(patientId)) {
                        successPatients.push(patientId);
                        $('#assignableCount').text(successPatients.length);
                    }
                    $('#assignAll').prop('disabled', successPatients.length === 0);
                } else {
                    resultElement
                        .removeClass('success')
                        .addClass('error')
                        .html(`<i class="fas fa-times-circle me-2"></i>${response.message}`);
                }
            },
            // Throws exception if anything goes wrong during the check
            error: function () {
                $(`#result-${patientId}`)
                    .removeClass('success')
                    .addClass('error')
                    .html(`<i class="fas fa-exclamation-circle me-2"></i>Error checking assignability`);
            }
    });
}

    // If any patient can be assigned, enable the 'assign all' button.
    function openAssignAllModal() {
        document.getElementById("modalContent").innerHTML = `
            <div class="assignment-form">
                <h4 class="mb-3">Bulk Patient Assignment</h4>
                <div class="alert alert-info mb-3">
                    <i class="fas fa-info-circle me-2"></i>
                    Assigning ${successPatients.length} patients
                </div>
                <div class="form-group">
                    <label for="descriptionInput" class="form-label">Treatment Description</label>
                    <textarea id="descriptionInput"
                        class="form-control"
                        placeholder="Enter treatment description"
                        oninput="toggleAssignButton()"
                        rows="4"></textarea>
                </div>
                <div class="modal-actions mt-4">
                    <button id="confirmAssignButton"
                        class="btn btn-success w-100 mb-2"
                        onclick="assignWholeSubmit()"
                        disabled>
                        <i class="fas fa-users-cog me-2"></i>Assign All Patients
                    </button>
                    <button class="btn btn-outline-secondary w-100" onclick="closeModal()">
                        Cancel
                    </button>
                </div>
            </div>
        `;

        document.getElementById("modalOverlay").style.display = "block";
        document.getElementById("detailModal").style.display = "block";
    }

    function toggleAssignButton() {
        const description = document.getElementById("descriptionInput").value;
        document.getElementById("confirmAssignButton").disabled = description.trim() === "";
    }

    function closeModal() {
        document.getElementById("modalOverlay").style.display = "none";
        document.getElementById("detailModal").style.display = "none";
    }

    // Cannot assign any patients if the list is empty
    function assignWholeSubmit() {
        if (successPatients.length === 0) {
            showMessage('Warning', 'No patients available to assign', 'warning');
            return;
        }
        // Allows you to enter the treatment record for many patients at once
        const description = document.getElementById("descriptionInput").value;
        if (!description.trim()) {
            showMessage('Warning', 'Please enter a treatment description', 'warning');
            return;
        }

        $('#confirmAssignButton').prop('disabled', true)
            .html('<i class="fas fa-spinner fa-spin me-2"></i>Assigning...');

        var assignedCount = 0;
        var errors = 0;

        // For every patient that can be assigned, send the POST request to the controller to add a treatmentRecord.
        successPatients.forEach((patientId, index) => {
            const treatmentId = `TREAT-${new Date().getTime()}-${index}`;
            const now = new Date();
            const treatmentDate = now.toISOString();

            const data = {
                treatmentID: treatmentId,
                description: description,
                treatmentDate: treatmentDate,
                patientID: patientId,
                workerID: workerId,
                roleName: roleName
            };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AssignPatient", "TreatmentRecords")',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    if (response.success) {
                        assignedCount++;
                    } else {
                        errors++;
                        console.error(`Failed to assign patient ${patientId}: ${response.message}`);
                    }

                    if (assignedCount + errors === successPatients.length) {
                        closeModal(); // Close the assignment modal
                        if (errors === 0) {
                            showResultMessage('Success', `Successfully assigned all ${assignedCount} patients`);
                        } else {
                            showResultMessage('Warning', `Assigned ${assignedCount} patients. ${errors} assignments failed.`);
                        }
                    }
                },
                error: function(xhr, status, error) {
                    errors++;
                    console.error(`Error assigning patient ${patientId}:`, error);
                    if (assignedCount + errors === successPatients.length) {
                        closeModal(); // Close the assignment modal
                        showResultMessage('Error', `Assigned ${assignedCount} patients. ${errors} assignments failed.`);
                    }
                }
            });
        });
    }

// Add these helper functions and HTML for the result modal
function showResultMessage(title, message, type = 'success') {
    const modalContent = `
        <div class="result-modal-content text-center">
            <div class="mb-4">
                <i class="fas fa-${type === 'success' ? 'check-circle text-success' :
                                  type === 'warning' ? 'exclamation-triangle text-warning' :
                                  'times-circle text-danger'}"
                   style="font-size: 3rem;"></i>
            </div>
            <h4 class="mb-3">${title}</h4>
            <p class="mb-4">${message}</p>
            <button class="btn btn-primary w-100" onclick="redirectToIndex()">
                <i class="fas fa-home me-2"></i>Return to iCARE Board
            </button>
        </div>
    `;

    document.getElementById("modalContent").innerHTML = modalContent;
    document.getElementById("modalOverlay").style.display = "block";
    document.getElementById("detailModal").style.display = "block";
}

function redirectToIndex() {
    window.location.href = '@Url.Action("Index", "GeoCodes")';
}
</script>