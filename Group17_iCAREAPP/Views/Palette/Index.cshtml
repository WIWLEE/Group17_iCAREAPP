
@model Group17_iCAREAPP.Models.ViewModels.PaletteViewModel

<div class="palette-container">
    <h2 class="mb-4">Palette</h2>
    <div class="palette-header">
        <div class="search-bar">
            @using (Html.BeginForm("Index", "Palette", FormMethod.Get))
            {
                @Html.TextBoxFor(m => m.SearchQuery, new { @class = "form-control", placeholder = "Search documents..." })
                <button type="submit" class="btn btn-primary">Search</button>
            }
        </div>

        <div class="sort-options">
            @Html.DropDownListFor(m => m.SortBy,
                new SelectList(new[]
                {
                    new { Value = "date", Text = "Date" },
                    new { Value = "name", Text = "Name" },
                    new { Value = "version", Text = "Version" }
                }, "Value", "Text"),
                new { @class = "form-control", onchange = "this.form.submit()" })
        </div>
    </div>

    @if (!Model.Documents.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            No documents found. @(string.IsNullOrEmpty(Model.SearchQuery) ? "" : "Try adjusting your search criteria.")
        </div>
    }

<div class="document-grid">
    @foreach (var doc in Model.Documents)
    {
        <div class="document-tile">
            @* Replace the form with a link to document details *@
            <div class="doc-icon">
                <i class="fas fa-file"></i>
            </div>
            <div class="doc-info">
                <h4>@doc.docName</h4>
                <p>Created: @doc.dateOfCreation.ToShortDateString()</p>
                <p>Version: @doc.version</p>
                @Html.ActionLink("View Details", "Details", "Document", new { id = doc.docID }, new { @class = "btn btn-sm btn-primary mt-2" })
            </div>
        </div>
    }
</div>

    @if (Model.TotalPages > 1)
    {
        <div class="pagination-controls">
            @if (Model.CurrentPage > 1)
            {
                @Html.ActionLink("Previous", "Index",
                    new
                         {
                        page = Model.CurrentPage - 1,
                        searchQuery = Model.SearchQuery,
                        sortBy = Model.SortBy
                    },
                    new { @class = "btn btn-default" })
            }

            <span class="page-info">
                Page @Model.CurrentPage of @Model.TotalPages
                (@Model.Documents.Count items)
            </span>

            @if (Model.CurrentPage < Model.TotalPages)
            {
                @Html.ActionLink("Next", "Index",
                    new
                         {
                        page = Model.CurrentPage + 1,
                        searchQuery = Model.SearchQuery,
                        sortBy = Model.SortBy
                    },
                    new { @class = "btn btn-default" })
            }
        </div>
    }
</div>

